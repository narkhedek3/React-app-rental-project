{"version":3,"sources":["components/shared/Header.js","components/rental/RentalCard.js","pages/RentalHome.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","href","role","aria-haspopup","aria-labelledby","RentalCard","props","rental","key","_id","src","image","alt","category","shared","city","title","dailyPrice","RentalHome","state","rentals","numOfRooms","description","renderRentals","map","render","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oMA4CeA,G,wBAvCA,WACb,OACE,yBAAKC,UAAU,+CACb,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC9K,0BAAMN,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BO,GAAG,uBAC3C,uBAAGP,UAAU,gBAAb,YACA,0BAAMA,UAAU,4BACd,2BAAOA,UAAU,uBAAuBC,KAAK,SAASO,YAAY,SAASF,aAAW,WACtF,4BAAQN,UAAU,uCAAuCC,KAAK,UAA9D,WAEF,wBAAID,UAAU,mCACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,YAAb,QAA8B,0BAAMA,UAAU,WAAhB,eAGhC,wBAAIA,UAAU,qBACZ,uBAAGA,UAAU,2BAA2BS,KAAK,IAAIF,GAAG,yBAAyBG,KAAK,SAASR,cAAY,WAAWS,gBAAc,OAAON,gBAAc,SAArJ,UAGA,yBAAKL,UAAU,gBAAgBY,kBAAgB,0BAC7C,uBAAGZ,UAAU,gBAAgBS,KAAK,KAAlC,UACA,uBAAGT,UAAU,gBAAgBS,KAAK,KAAlC,kBACA,uBAAGT,UAAU,gBAAgBS,KAAK,KAAlC,yBAGJ,wBAAIT,UAAU,YACZ,uBAAGA,UAAU,YAAb,UAEF,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,YAAb,kB,qBChBGa,EAlBI,SAACC,GAAW,IAErBC,EAAWD,EAAXC,OAER,OACE,yBAAKC,IAAKD,EAAOE,IAAKjB,UAAU,YAC9B,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eAAekB,IAAKH,EAAOI,MAAOC,IAAI,aACrD,yBAAKpB,UAAU,aACb,wBAAIA,UAAS,6CAAwCe,EAAOM,WAAaN,EAAOO,OAAS,SAAW,QAApG,IAA+GP,EAAOM,SAAtH,SAAwIN,EAAOQ,MAC/I,wBAAIvB,UAAU,uBAAuBe,EAAOS,OAC5C,uBAAGxB,UAAU,aAAb,IAA2Be,EAAOU,WAAlC,wCCgDKC,E,4MAxDbC,MAAQ,CACNC,QAAS,CAAC,CACRX,IAAM,IACNO,MAAO,qBACPD,KAAM,gBACNF,SAAU,QACVF,MAAO,qCACPU,WAAY,EACZP,QAAQ,EACRQ,YAAa,6CACbL,WAAY,IAEd,CACER,IAAM,IACNO,MAAO,6BACPD,KAAM,WACNF,SAAU,YACVF,MAAO,qCACPU,WAAY,EACZP,QAAQ,EACRQ,YAAa,6CACbL,WAAY,IAEd,CACER,IAAK,IACLO,MAAO,sBACPD,KAAM,aACNF,SAAU,QACVF,MAAO,qCACPU,WAAY,EACZP,QAAQ,EACRQ,YAAa,6CACbL,WAAY,M,EAIhBM,cAAgB,SAAAH,GAAO,OAAIA,EAAQI,KAAI,SAACjB,GAAD,OAAY,kBAAC,EAAD,CAAYA,OAAQA,Q,EAEvEkB,OAAS,WAAO,IACNL,EAAY,EAAKD,MAAjBC,QACR,OACE,yBAAK5B,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,kCACA,yBAAKA,UAAU,OAEX,EAAK+B,cAAcH,O,YAhDRM,IAAMC,WCWhBC,MATf,WACE,OACE,yBAAKpC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCLNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.8e0fa3e5.chunk.js","sourcesContent":["// to disable warnigs\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n        <a className=\"navbar-brand\" >Rent Now</a>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n        <ul className=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" >Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Manage\r\n        </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" >Login</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" >Register</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst RentalCard = (props) => {\r\n\r\n  const { rental } = props;\r\n\r\n  return (\r\n    <div key={rental._id} className=\"col-md-3\">\r\n      <div className=\"card bwm-card\">\r\n        <img className=\"card-img-top\" src={rental.image} alt=\"Card cap\" />\r\n        <div className=\"card-body\">\r\n          <h6 className={`card-subtitle mb-0 text-muted type-${rental.category}`}>{rental.shared ? 'Shared' : 'Whole' } {rental.category} &#183; {rental.city}</h6>\r\n          <h5 className=\"card-title big-font\">{rental.title}</h5>\r\n          <p className=\"card-text\">${rental.dailyPrice} per Night &#183; Free Cancelation</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RentalCard;","import React from 'react';\r\nimport RentalCard from '../components/rental/RentalCard';\r\n\r\nclass RentalHome extends React.Component {\r\n\r\n  state = {\r\n    rentals: [{\r\n      _id : '1',\r\n      title: \"Nice view on ocean\",\r\n      city: \"San Francisco\",\r\n      category: \"condo\",\r\n      image: \"http://via.placeholder.com/350x250\",\r\n      numOfRooms: 4,\r\n      shared: true,\r\n      description: \"Very nice apartment in center of the city.\",\r\n      dailyPrice: 43\r\n    },\r\n    {\r\n      _id : '2',\r\n      title: \"Modern apartment in center\",\r\n      city: \"New York\",\r\n      category: \"apartment\",\r\n      image: \"http://via.placeholder.com/350x250\",\r\n      numOfRooms: 1,\r\n      shared: false,\r\n      description: \"Very nice apartment in center of the city.\",\r\n      dailyPrice: 11\r\n    },\r\n    {\r\n      _id: '3',\r\n      title: \"Old house in nature\",\r\n      city: \"Bratislava\",\r\n      category: \"house\",\r\n      image: \"http://via.placeholder.com/350x250\",\r\n      numOfRooms: 5,\r\n      shared: true,\r\n      description: \"Very nice apartment in center of the city.\",\r\n      dailyPrice: 23\r\n    }]\r\n  }\r\n\r\n  renderRentals = rentals => rentals.map((rental) => <RentalCard rental={rental} />);\r\n\r\n  render = () => {\r\n    const { rentals } = this.state;\r\n    return (\r\n      <div className=\"card-list\">\r\n        <div className=\"container\">\r\n          <h1 className=\"page-title\">Your Home All Around the World</h1>\r\n          <div className=\"row\">\r\n            {\r\n              this.renderRentals(rentals)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RentalHome;","import React from 'react';\nimport './App.css';\nimport Header from './components/shared/Header';\nimport RentalHome from './pages/RentalHome';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <RentalHome />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// imporing order matters\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n// to override some bootstrap classes index.css must be imported after them\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}