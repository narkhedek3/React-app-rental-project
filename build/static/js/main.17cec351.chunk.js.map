{"version":3,"sources":["store/data.js","components/shared/Header.js","components/rental/RentalCard.js","state-context.js","store/connect.js","pages/RentalHome.js","pages/Login.js","pages/Register.js","Routes.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["exports","rentalData","_id","title","city","category","image","numOfRooms","shared","description","dailyPrice","Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","to","href","role","aria-haspopup","aria-labelledby","RentalCard","props","rental","src","alt","StateContext","React","createContext","connect","mapStateToProps","Component","Connect","render","sliceOfData","context","getState","contextType","RentalHome","state","rentals","renderRentals","map","key","this","setState","Login","Register","Routes","path","store","reducers","combineReducers","data","data1","createStore","initStore","App","Provider","value","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.17cec351.chunk.js","sourcesContent":["\r\n\r\nexports.rentalData = [\r\n  {\r\n    _id: '1',\r\n    title: \"Nice view on ocean\",\r\n    city: \"San Francisco\",\r\n    category: \"condo\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 4,\r\n    shared: true,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 43\r\n  },\r\n  {\r\n    _id: '2',\r\n    title: \"Modern apartment in center\",\r\n    city: \"New York\",\r\n    category: \"apartment\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 1,\r\n    shared: false,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 11\r\n  },\r\n  {\r\n    _id: '3',\r\n    title: \"Old house in nature\",\r\n    city: \"Bratislava\",\r\n    category: \"house\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 5,\r\n    shared: true,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 23\r\n  }\r\n];","// to disable warnigs\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n        <a className=\"navbar-brand\" >Rent Now</a>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n        <ul className=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Manage\r\n        </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"https://narkhedek3.github.io/React-app-rental-project/login\">Login</Link> \r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst RentalCard = (props) => {\r\n\r\n  const { rental } = props;\r\n  \r\n  return (\r\n    <div className=\"col-md-3\">\r\n      <div className=\"card bwm-card\">\r\n        <img className=\"card-img-top\" src={rental.image} alt=\"Card cap\" />\r\n        <div className=\"card-body\">\r\n          <h6 className={`card-subtitle mb-0 text-muted type-${rental.category}`}>{rental.shared ? 'Shared' : 'Whole' } {rental.category} &#183; {rental.city}</h6>\r\n          <h5 className=\"card-title big-font\">{rental.title}</h5>\r\n          <p className=\"card-text\">${rental.dailyPrice} per Night &#183; Free Cancelation</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RentalCard;","import React from 'react';\r\n\r\n\r\nconst StateContext = React.createContext({});\r\n\r\nexport { \r\n  StateContext\r\n};","// HOC high order component\r\n\r\nimport React from 'react';\r\n\r\nimport { StateContext } from '../state-context';\r\n\r\nconst connect = mapStateToProps => Component => {\r\n\r\n  class Connect extends React.Component {\r\n    render = () => {\r\n      // const store = this.context\r\n      // return <Component store={store}/>\r\n      \r\n      const sliceOfData = mapStateToProps(this.context.getState());\r\n      return <Component { ...sliceOfData }/>\r\n    } \r\n  }\r\n\r\n  Connect.contextType = StateContext;\r\n\r\n  return Connect;\r\n\r\n}\r\n\r\nexport default connect;","import React from 'react';\r\nimport RentalCard from '../components/rental/RentalCard';\r\n\r\nimport connect from '../store/connect';\r\n\r\nclass RentalHome extends React.Component {\r\n\r\n  state = {\r\n    rentals: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { rentals } = this.props;\r\n    this.setState({\r\n      rentals: rentals\r\n    })\r\n  }\r\n\r\n  renderRentals = rentals => rentals.map((rental) => <RentalCard key={rental._id} rental={rental} />);\r\n   \r\n\r\n  render = () => {\r\n    const { rentals } = this.state;\r\n    return (\r\n      <div className=\"card-list\">\r\n        <div>\r\n          <h1 className=\"page-title\">Your Home All Around the World</h1>\r\n          <div className=\"row\">\r\n            {\r\n              this.renderRentals(rentals)\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n// below line can be removed using HOC i.e connect function\r\n// RentalHome.contextType = StateContext;\r\n\r\n\r\n// to get only required data\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rentals: state.rentals\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RentalHome);","import React from 'react';\r\n\r\nclass Login extends React.Component { \r\n  \r\n  render = () => {\r\n    return (\r\n      <h1>Login</h1>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n      <h1>Register</h1>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport RentalHome from './pages/RentalHome';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"container rental-app-container\">\r\n      <Switch>\r\n        <Route path='/login'>\r\n          <Login />\r\n        </Route>\r\n        <Route path='/register'>\r\n          <Register />\r\n        </Route>\r\n        <Route path='/'>\r\n          <RentalHome />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Header from './components/shared/Header';\n// import RentalHome from './pages/RentalHome';\n// import Login from './pages/Login';\n// import Register from './pages/Register';\n\n// import { Router, Route } from './components/custom-router';\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport Routes from './Routes';\n\nimport { StateContext } from './state-context';\n\nimport { initStore } from './store';\nconst store = initStore();\n\nconst App = () => {\n  \n  //#region basic routing\n  // const renderPages = () => {\n  //   const { pathname } = window.location;\n\n  //   switch(pathname) {\n  //     case '/login':\n  //       return (<Login />);\n  //     case '/register':\n  //       return (<Register />);\n  //     case '/': \n  //       return (<RentalHome />);\n  //     default:\n  //       return (<RentalHome />);\n  //   }\n  // }\n  //#endregion \n\n  return (\n    <div className=\"App\">\n    \n      {\n      //#region   custom router code\n      /*<Router>\n        <Route path='/login'>\n        <Login />\n        </Route>\n        <Route path='/register'>\n        <Register />\n        </Route>\n        <Route path='/'>\n        <RentalHome />\n        </Route>\n      </Router> */\n      //#endregion\n      }\n      {/* { renderPages() } */}\n\n      <StateContext.Provider value={store}>\n        <Router> \n          <Header />\n          <Routes />\n        </Router>\n      </StateContext.Provider>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import { rentalData } from './data';\r\n\r\nimport { createStore, combineReducers } from 'redux';\r\n\r\n// const store = {\r\n//   rentals: () => rentalData,\r\n//   data: [1,2,3],\r\n//   data1: ['A','B','C']\r\n// };\r\n\r\nexport const initStore = () => {\r\n\r\n  const reducers = combineReducers({\r\n    rentals: () => rentalData,\r\n    data: [1, 2, 3],\r\n    data1: ['A', 'B', 'C']\r\n  });\r\n\r\n  const store = createStore(reducers);\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// imporing order matters\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n// to override some bootstrap classes index.css must be imported after them\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}