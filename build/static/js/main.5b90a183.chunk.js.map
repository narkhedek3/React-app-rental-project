{"version":3,"sources":["store/data.js","components/shared/Header.js","components/rental/RentalCard.js","pages/RentalHome.js","actions/index.js","pages/Login.js","pages/Register.js","pages/RentalDetails.js","helpers/functions.js","Routes.js","store/reducers/rentals.js","store/reducers/rental.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["exports","rentalData","_id","title","city","category","image","numOfRooms","shared","description","dailyPrice","Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","to","href","role","aria-haspopup","aria-labelledby","RentalCard","props","rental","src","alt","RentalHome","renderRentals","rentals","map","key","render","this","dispatch","React","Component","connect","state","Login","Register","RentalDetails","rentalId","match","params","find","fetchRentalById","value","split","word","toUpperCase","slice","join","icon","withRouter","Routes","path","action","store","reducers","combineReducers","reduxBrowserExtension","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","initStore","App","Boolean","location","hostname","library","add","fas","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b90a183.chunk.js","sourcesContent":["\r\n\r\nexports.rentalData = [\r\n  {\r\n    _id: '1',\r\n    title: \"Nice view on ocean\",\r\n    city: \"San Francisco\",\r\n    category: \"condo\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 4,\r\n    shared: true,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 43\r\n  },\r\n  {\r\n    _id: '2',\r\n    title: \"Modern apartment in center\",\r\n    city: \"New York\",\r\n    category: \"apartment\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 1,\r\n    shared: false,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 11\r\n  },\r\n  {\r\n    _id: '3',\r\n    title: \"Old house in nature\",\r\n    city: \"Bratislava\",\r\n    category: \"house\",\r\n    image: \"http://via.placeholder.com/350x250\",\r\n    numOfRooms: 5,\r\n    shared: true,\r\n    description: \"Very nice apartment in center of the city.\",\r\n    dailyPrice: 23\r\n  }\r\n];","// to disable warnigs\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n        <a className=\"navbar-brand\" >Rent Now</a>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n        <ul className=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n              Manage\r\n        </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n              <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">Login</Link> \r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RentalCard = (props) => {\r\n\r\n  const { rental } = props;\r\n  \r\n  return (\r\n    <Link className=\"col-md-3 rental-link\" to={`rental/${rental._id}`}>\r\n      <div className=\"card bwm-card\">\r\n        <img className=\"card-img-top\" src={rental.image} alt=\"Card cap\" />\r\n        <div className=\"card-body\">\r\n          <h6 className={`card-subtitle mb-0 text-muted type-${rental.category}`}>{rental.shared ? 'Shared' : 'Whole' } {rental.category} &#183; {rental.city}</h6>\r\n          <h5 className=\"card-title big-font\">{rental.title}</h5>\r\n          <p className=\"card-text\">${rental.dailyPrice} per Night &#183; Free Cancelation</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default RentalCard;","import React from 'react';\r\nimport RentalCard from 'components/rental/RentalCard';\r\n\r\n// custom HOC redux connect\r\n// import connect from '../store/connect';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchRentals } from '../actions';\r\n\r\nclass RentalHome extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchRentals());\r\n  }\r\n\r\n  renderRentals = rentals => rentals.map((rental) => <RentalCard key={rental._id} rental={rental} />);\r\n\r\n  render = () => {\r\n    const { rentals } = this.props;\r\n\r\n    return (\r\n      <div className=\"card-list\">\r\n        <div>\r\n          <h1 className=\"page-title\">Your Home All Around the World</h1>\r\n            <div className=\"row\">\r\n              {\r\n                this.renderRentals(rentals)\r\n              }\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n  }\r\n\r\n}\r\n\r\n// below line can be removed using HOC[high order component] i.e connect function\r\n// RentalHome.contextType = StateContext;\r\n\r\n\r\n// to get only required data\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rentals: state.rentals\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(RentalHome);","import { rentalData } from 'store/data';\r\n\r\nexport const fetchRentals = () => ({ type: 'FETCH_RENTALS', rentals: rentalData });\r\n\r\nexport const fetchRentalById = (rentalId) => {\r\n  \r\n  const rental = rentalData.find((rental) => rental._id === rentalId);\r\n\r\n  return { \r\n    type: 'FETCH_RENTAL_BY_ID', \r\n    rental\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nclass Login extends React.Component { \r\n  \r\n  render = () => {\r\n    return (\r\n      <h1>Login</h1>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\r\n  render = () => {\r\n    return (\r\n      <h1>Register</h1>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Register;","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRentalById } from 'actions';\r\nimport { capitalize } from 'helpers/functions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass RentalDetails extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const rentalId = this.props.match.params.id;\r\n    this.props.dispatch(fetchRentalById(rentalId));\r\n  }\r\n\r\n  render() {\r\n    const { rental } = this.props;\r\n\r\n    return (\r\n      <section id=\"rentalDetails\">\r\n        <div className=\"upper-section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              {/* <!-- TODO: Display rental image --> */}\r\n              <img src={rental.image} alt={rental.title} />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              {/* <!-- TODO: Display rental image --> */}\r\n              <img src={rental.image} alt={rental.title} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"details-section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8\">\r\n              <div className=\"rental\">\r\n                {/* <!-- TODO: Display shared category --> */}\r\n                <h2 className={`rental-type type-${rental.category}`}>{`${rental.shared ? 'Shared' : 'Whole'}  ${rental.category}`}</h2>\r\n                {/* <!-- TODO: Display title --> */}\r\n                <h1 className=\"rental-title\">{rental.title}</h1>\r\n                {/* <!-- TODO: Display city --> */}\r\n                <h2 className=\"rental-city\">{capitalize(rental.city)}</h2>\r\n                <div className=\"rental-room-info\">\r\n                  {/* <!-- TODO: Display numOfRooms --> */}\r\n                  <span>\r\n                    <FontAwesomeIcon icon=\"building\" />\r\n                    {rental.numOfRooms} bedrooms\r\n                  </span>\r\n                  {/* // <!-- TODO: Display numOfRooms + 4 --> */}\r\n                  <span>\r\n                    <FontAwesomeIcon icon=\"user\" /> {rental.numOfRooms + 4} guests\r\n                  </span>\r\n                  {/* // <!-- TODO: Display numOfRooms + 2 --> */}\r\n                  <span>\r\n                    <FontAwesomeIcon icon=\"bed\" /> {rental.numOfRooms + 2} beds\r\n                  </span>\r\n                </div>\r\n                {/* <!-- TODO: Display description --> */}\r\n                <p className=\"rental-description\">\r\n                  {rental.description}\r\n                </p>\r\n                <hr />\r\n                <div className=\"rental-assets\">\r\n                  <h3 className=\"title\">Assets</h3>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"asterisk\" /> Cooling\r\n                      </span>\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"thermometer\" /> Heating\r\n                      </span>\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"location-arrow\" /> Iron\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"desktop\" /> Working area\r\n                      </span>\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"archive\" /> Washing machine\r\n                      </span>\r\n                      <span>\r\n                        <FontAwesomeIcon icon=\"soap\" /> Dishwasher\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\"> BOOKING</div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n// to get only required data\r\nconst mapStateToProps = ({ rental }) => ({ rental })\r\n\r\nexport default connect(mapStateToProps)(withRouter(RentalDetails));","\r\nexport const capitalize = (value) => {\r\n  if (!value || typeof value !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  // capitalizing first letter of word\r\n  return value\r\n    .split(' ')\r\n    .map((word) => word[0].toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n} ","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport RentalHome from './pages/RentalHome';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport RentalDetails from './pages/RentalDetails';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"container rental-app-container\">\r\n      <Switch>\r\n        <Route path='/login'>\r\n          <Login />\r\n        </Route>\r\n        <Route path='/register'>\r\n          <Register />\r\n        </Route>\r\n        <Route path='/rental/:id'>\r\n          <RentalDetails />\r\n        </Route>\r\n        <Route path='/'>\r\n          <RentalHome />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Routes;","\r\nconst rentals = (state = [], action) => {\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_RENTALS':\r\n      return action.rentals;\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n}\r\n\r\nexport default rentals;","\r\nconst rental = (state = {}, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_RENTAL_BY_ID':\r\n      return action.rental;\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n}\r\n\r\nexport default rental;","import React from 'react';\nimport './App.css';\nimport Header from './components/shared/Header';\n// import RentalHome from './pages/RentalHome';\n// import Login from './pages/Login';\n// import Register from './pages/Register';\n\n// import { Router, Route } from './components/custom-router';\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport Routes from './Routes';\n\n// custom react redux provider\n//import { StateContext } from './state-context';\n// import Provider from './store/Provider';\n\nimport { Provider } from 'react-redux';\n\nimport { initStore } from './store';\nconst store = initStore();\n\nconst App = () => {\n  \n  //#region basic routing\n  // const renderPages = () => {\n  //   const { pathname } = window.location;\n\n  //   switch(pathname) {\n  //     case '/login':\n  //       return (<Login />);\n  //     case '/register':\n  //       return (<Register />);\n  //     case '/': \n  //       return (<RentalHome />);\n  //     default:\n  //       return (<RentalHome />);\n  //   }\n  // }\n  //#endregion \n\n  return (\n    <div className=\"App\">\n    \n      {\n      //#region   custom router code\n      /*<Router>\n        <Route path='/login'>\n        <Login />\n        </Route>\n        <Route path='/register'>\n        <Register />\n        </Route>\n        <Route path='/'>\n        <RentalHome />\n        </Route>\n      </Router> */\n      //#endregion\n      }\n      {/* { renderPages() } */}\n\n      <Provider store={store}>\n        <Router> \n          <Header />\n          <Routes />\n         </Router>\n      </Provider>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import rentals from './reducers/rentals';\r\nimport rental from './reducers/rental';\r\nimport { createStore, combineReducers } from 'redux';\r\n\r\n// const store = {\r\n//   rentals: () => rentalData,\r\n//   data: [1,2,3],\r\n//   data1: ['A','B','C']\r\n// };\r\n\r\nexport const initStore = () => {\r\n\r\n  // reducers are PURE function\r\n  // every time same output for same input\r\n  // No  API calls or route changses\r\n  // No Math.random() \r\n  const reducers = combineReducers({\r\n    rentals,\r\n    rental\r\n  });\r\n\r\n  const reduxBrowserExtension = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  const store = createStore(reducers, reduxBrowserExtension);\r\n  return store;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// imporing order matters for css\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n// to override some bootstrap classes index.css must be imported after them\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\n// any statement must be after all imports\nlibrary.add(fas);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}