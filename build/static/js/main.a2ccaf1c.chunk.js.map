{"version":3,"sources":["components/shared/Header.js","components/rental/RentalCard.js","pages/RentalHome.js","actions/index.js","components/forms/LoginForm.js","rental_constants.js","pages/Login.js","helpers/validators.js","components/forms/FormError.js","components/forms/RegisterForm.js","pages/Register.js","components/rental/RentalAssets.js","components/rental/RentalInfo.js","helpers/functions.js","pages/RentalDetails.js","Routes.js","store/reducers/rentals.js","store/reducers/rental.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","to","href","role","aria-haspopup","aria-labelledby","RentalCard","props","rental","_id","src","image","alt","category","shared","city","title","dailyPrice","RentalHome","renderRentals","rentals","map","key","render","isFetching","this","dispatch","axios","get","then","res","data","React","Component","connect","items","LoginForm","onSubmit","useForm","register","handleSubmit","errors","htmlFor","ref","required","pattern","name","email","minLength","password","Login","state","event","alert","JSON","stringify","loginUser","loginData","sameAs","field","getValues","value","FormError","children","error","Error","RegisterForm","as","message","validate","Register","registerUser","registerData","RentalAssets","icon","RentalInfo","split","word","toUpperCase","slice","join","numOfRooms","description","RentalDetails","rentalId","match","params","a","fetchRentalById","item","withRouter","Routes","path","initRentalsReducer","combineReducers","action","initRentalReducer","store","reducers","composeEnhancerForChromeExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","initStore","App","Boolean","location","hostname","library","add","fas","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a2ccaf1c.chunk.js","sourcesContent":["// to disable warnigs\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n        <a className=\"navbar-brand\" >Rent Now</a>\n        <form className=\"form-inline my-2 my-lg-0\">\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n        <ul className=\"navbar-nav mt-2 mt-lg-0 ml-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\n          </li>\n\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Manage\n        </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n              <a className=\"dropdown-item\" href=\"#\">Action</a>\n              <a className=\"dropdown-item\" href=\"#\">Another action</a>\n              <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n            </div>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">Login</Link> \n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">Register</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RentalCard = (props) => {\n\n  const { rental } = props;\n  \n  return (\n    <Link className=\"col-md-3 rental-link\" to={`rental/${rental._id}`}>\n      <div className=\"card bwm-card\">\n        <img className=\"card-img-top\" src={rental.image} alt=\"Card cap\" />\n        <div className=\"card-body\">\n          <h6 className={`card-subtitle mb-0 text-muted type-${rental.category}`}>{rental.shared ? 'Shared' : 'Whole' } {rental.category} &#183; {rental.city}</h6>\n          <h5 className=\"card-title big-font\">{rental.title}</h5>\n          <p className=\"card-text\">${rental.dailyPrice} per Night &#183; Free Cancelation</p>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nexport default RentalCard;","import React from 'react';\nimport RentalCard from 'components/rental/RentalCard';\n\n// custom HOC redux connect\n// import connect from '../store/connect';\n\nimport { connect } from 'react-redux';\n\nimport { fetchRentals } from '../actions';\n\nclass RentalHome extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(fetchRentals());\n  }\n\n  renderRentals = rentals => rentals.map((rental) => <RentalCard key={rental._id} rental={rental} />);\n\n  render = () => {\n    const { rentals, isFetching } = this.props;\n    if(!isFetching) {\n      return (\n        <div className=\"card-list\">\n          <div>\n            <h1 className=\"page-title\">Your Home All Around the World</h1>\n              <div className=\"row\">\n                {\n                  this.renderRentals(rentals)\n                }\n              </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <h3>Loading...</h3>\n    }\n    \n    \n  }\n\n}\n\n// below line can be removed using HOC[high order component] i.e connect function\n// RentalHome.contextType = StateContext;\n\n\n// to get only required data\nconst mapStateToProps = ({ rentals }) => ({ rentals: rentals.items, isFetching: rentals.isFetching });\n\n\nexport default connect(mapStateToProps)(RentalHome);","// for static data from file\n// import { rentalData } from 'store/data';\n\nimport axios from 'axios';\n\n\n// export const fetchRentals = () => ({ type: 'FETCH_RENTALS', rentals: rentalData });\n\nexport const fetchRentals = () => dispatch => {\n  dispatch({ type: 'IS_FETCHING_RENTALS' });\n  axios.get('http://localhost:3000/api/v1/rentals')\n    .then((res) => {\n      const rentals = res.data;\n      return dispatch({\n        type: 'FETCH_RENTALS',\n        rentals\n      });\n    });\n}\n\n// async and await to sync data..\nexport const fetchRentalById = rentalId => async dispatch => {\n  dispatch({ type: 'IS_FETCHING_RENTAL' });\n  const res = await axios.get(`http://localhost:3000/api/v1/rentals/${rentalId}`);\n  return dispatch({\n    type: 'FETCH_RENTAL_BY_ID',\n    rental: res.data\n  });\n}\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { EMAIL_PATTERN } from 'rental_constants';\n\nconst LoginForm = ({ onSubmit }) => {\n\n  const { register, handleSubmit, errors } = useForm();\n\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          ref={register({ required: true, pattern: EMAIL_PATTERN})}\n          name=\"email\"\n          type=\"email\"\n          className=\"form-control\"\n          id=\"email\" />\n        {errors.email &&   \n        <div className=\"alert alert-danger\">\n            <div>\n              { errors.email.type === 'required' && \"email is required\"}\n            </div>\n            <div>\n              { errors.email.type === 'pattern' && \"Must be valid email format!\"}\n            </div>\n          </div> \n        }\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          ref={register({ required: true, minLength: 8})}\n          name=\"password\"\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\" />\n          { errors.password &&\n            <div className=\"alert alert-danger\">\n              Password is not valid\n            </div>\n          }\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-primary\">Submit</button>\n    </form>\n  );\n}\n\nexport default LoginForm;","\nexport const EMAIL_PATTERN = \"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\";","import React from 'react';\nimport LoginForm from 'components/forms/LoginForm';\n\nclass Login extends React.Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n\n  // handleInputChange = (event) => {\n  //   const { value, name } = event.target;\n  //   this.setState({ [name]: value });\n  // }\n\n  // handlePasswordChange = (event) => {\n  //   const password = event.target.value;\n  //   this.setState({password});\n  // }\n\n\n  handleSubmit = (event) => {\n    alert(JSON.stringify(this.state));\n  }\n\n  loginUser = (loginData) => {\n    alert(JSON.stringify(loginData));\n  }\n\n  render = () => {\n    return (\n      <div className=\"bwm-form\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h1 className=\"page-title\">Login</h1>\n            {/* <!-- <div className=\"alert alert-success\">\n                  Some message\n                </div> --> */}\n            <LoginForm onSubmit={this.loginUser}/>\n\n            {/* <div className=\"alert alert-danger\">\n                  <p>\n                    Some Error\n                  </p>\n                </div> --> */}\n          </div>\n          <div className=\"col-md-6 ml-auto\">\n            <div className=\"image-container\">\n              <h2 className=\"catchphrase\">Hundreds of awesome places in reach of few clicks.</h2>\n              <img src=\"/images/login_image.jpg\" alt=\"Login an user\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Login;","\nexport const sameAs = (field, getValues) => value => { \n  const compareTo = getValues()[field];\n  return compareTo === value; \n}","\nimport React from 'react';\n\nconst FormError = ({ errors, name, children }) => {\n\n  const error = errors[name] || null;\n\n  if (!error)\n    return null;\n\n  return (\n    <div className=\"alert alert-danger\">\n      {children(error)}\n    </div>\n  )\n\n\n}\n\nexport default FormError;","import React from 'react';\n\nimport { useForm, ErrorMessage } from 'react-hook-form';\n\n\nimport { sameAs } from 'helpers/validators';\nimport FormError from './FormError';\n\nconst Error = ({children}) => \n  <div className=\"alert alert-danger\">\n    {children}\n  </div>\n\nconst RegisterForm = ({ onSubmit }) => {\n\n  const { register, handleSubmit, errors, getValues } = useForm();\n\n\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          name=\"username\"\n          ref={register({ required: \"Username is required.\" })}\n          id=\"username\" />\n        {/* {errors.username &&\n          <div className=\"alert alert-danger\">\n            <div >\n              Username is required.\n            </div>\n          </div>\n        }s */}\n        <ErrorMessage as={<Error />} errors={errors} name=\"username\">\n          { ({message}) => <p>{message}</p> }\n        </ErrorMessage>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          ref={register({ required: \"Email is required.\" })}\n          className=\"form-control\"\n          id=\"email\" />\n        {/* {errors.email &&\n          <div className=\"alert alert-danger\">\n            <div >\n              Email is required.\n            </div>\n          </div>\n        } */}\n        <FormError as={<Error />} errors={errors} name=\"email\">\n          { ({message}) => <p>{message}</p>}\n        </FormError>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          ref={\n            register({ required: \"Password is required.\", minLength: { value: 4, message: \"length must me more than 4\"} })\n          }\n          className=\"form-control\"\n          id=\"password\" />\n        {/* {errors.password &&\n          <div className=\"alert alert-danger\">\n            <div >\n              Password with min length 8 is required.\n            </div>\n          </div>\n        } */}\n        <ErrorMessage as={<Error />} errors={errors} name=\"password\">\n          { ({message}) => <p>{message}</p>}\n        </ErrorMessage>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"passwordConfirmation\">Confirm Password</label>\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          ref={register({ required: true, validate: { sameAs: sameAs('password', getValues) } })}\n          className=\"form-control\"\n          id=\"passwordConfirmation\" />\n          {/* {errors.confirmPassword &&\n          <div className=\"alert alert-danger\">\n            <div >\n              {errors.confirmPassword.type === 'required' && \"Password is required.\"}\n            </div>\n            <div >\n              {errors.confirmPassword.type === 'sameAs' && \"Password not matched.\"}\n            </div>\n          </div>\n        } */}\n        <ErrorMessage as={<Error />} errors={errors} name=\"confirmPassword\">\n          { ({message}) => <p>{message}</p>}\n        </ErrorMessage>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-primary\">Submit</button>\n    </form>\n  );\n\n}\n\n\nexport default RegisterForm;","import React from 'react';\n\nimport RegisterForm from 'components/forms/RegisterForm';\n\nclass Register extends React.Component {\n\n  registerUser = (registerData) => {\n    alert(JSON.stringify(registerData));\n  }\n\n  render = () => {\n    return (\n      <div className=\"bwm-form\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h1 className=\"page-title\">Register</h1>\n            <RegisterForm onSubmit={this.registerUser}/>\n            {/* <div className=\"alert alert-danger\">\n        <p>\n          Some Error\n        </p>\n      </div> */}\n          </div>\n          <div className=\"col-md-6 ml-auto\">\n            <div className=\"image-container\">\n              <h2 className=\"catchphrase\">As our member you have access to most awesome places in the world.</h2>\n              <img src=\"/images/login_image.jpg\" alt=\"Register an user\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Register;","\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst RentalAssets = () => {\n  return (\n    <div className=\"rental-assets\">\n      <h3 className=\"title\">Assets</h3>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <span>\n            <FontAwesomeIcon icon=\"asterisk\" /> Cooling\n                      </span>\n          <span>\n            <FontAwesomeIcon icon=\"thermometer\" /> Heating\n                      </span>\n          <span>\n            <FontAwesomeIcon icon=\"location-arrow\" /> Iron\n                      </span>\n        </div>\n        <div className=\"col-md-6\">\n          <span>\n            <FontAwesomeIcon icon=\"desktop\" /> Working area\n                      </span>\n          <span>\n            <FontAwesomeIcon icon=\"archive\" /> Washing machine\n                      </span>\n          <span>\n            <FontAwesomeIcon icon=\"soap\" /> Dishwasher\n                      </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default RentalAssets;","\nimport React from 'react';\n\nimport { capitalize } from 'helpers/functions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport RentalAssets from './RentalAssets';\n\nconst RentalInfo = ({ rental }) => {\n  return (\n    <div className=\"rental\">\n      {/* <!-- TODO: Display shared category --> */}\n      <h2 className={`rental-type type-${rental.category}`}>{`${rental.shared ? 'Shared' : 'Whole'}  ${rental.category}`}</h2>\n      {/* <!-- TODO: Display title --> */}\n      <h1 className=\"rental-title\">{rental.title}</h1>\n      {/* <!-- TODO: Display city --> */}\n      <h2 className=\"rental-city\">{capitalize(rental.city)}</h2>\n      <div className=\"rental-room-info\">\n        {/* <!-- TODO: Display numOfRooms --> */}\n        <span>\n          <FontAwesomeIcon icon=\"building\" />\n          {rental.numOfRooms} bedrooms\n    </span>\n        {/* // <!-- TODO: Display numOfRooms + 4 --> */}\n        <span>\n          <FontAwesomeIcon icon=\"user\" /> {rental.numOfRooms + 4} guests\n    </span>\n        {/* // <!-- TODO: Display numOfRooms + 2 --> */}\n        <span>\n          <FontAwesomeIcon icon=\"bed\" /> {rental.numOfRooms + 2} beds\n    </span>\n      </div>\n      {/* <!-- TODO: Display description --> */}\n      <p className=\"rental-description\">\n        {rental.description}\n      </p>\n      <hr />\n      <RentalAssets />\n    </div>\n  );\n}\n\nexport default RentalInfo;\n","\nexport const capitalize = (value) => {\n  if (!value || typeof value !== 'string') {\n    return '';\n  }\n\n  // capitalizing first letter of word\n  return value\n    .split(' ')\n    .map((word) => word[0].toUpperCase() + word.slice(1))\n    .join(' ');\n} ","\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchRentalById } from 'actions';\n\nimport RentalInfo from 'components/rental/RentalInfo';\n\nclass RentalDetails extends React.Component {\n\n  componentDidMount() {\n    const rentalId = this.props.match.params.id;\n    this.props.dispatch(fetchRentalById(rentalId));\n  }\n\n  render() {\n    const { rental, isFetching } = this.props;\n    if (!isFetching) {\n      return (\n        <section id=\"rentalDetails\">\n          <div className=\"upper-section\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                {/* <!-- TODO: Display rental image --> */}\n                <img src={rental.image} alt={rental.title} />\n              </div>\n              <div className=\"col-md-6\">\n                {/* <!-- TODO: Display rental image --> */}\n                <img src={rental.image} alt={rental.title} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"details-section\">\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <RentalInfo rental={rental} />\n              </div>\n              <div className=\"col-md-4\"> BOOKING</div>\n            </div>\n          </div>\n        </section>\n      );\n    } else {\n      return <h4>Loding...</h4>\n    }\n\n  }\n}\n\n// to get only required data\nconst mapStateToProps = ({ rental }) => ({ rental: rental.item, isFetching: rental.isFetching })\n\nexport default connect(mapStateToProps)(withRouter(RentalDetails));","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport RentalHome from './pages/RentalHome';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport RentalDetails from './pages/RentalDetails';\n\nconst Routes = () => {\n  return (\n    <div className=\"container rental-app-container\">\n      <Switch>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route path='/rental/:id'>\n          <RentalDetails />\n        </Route>\n        <Route path='/'>\n          <RentalHome />\n        </Route>\n      </Switch>\n    </div>\n  );\n\n}\n\nexport default Routes;","import { combineReducers } from 'redux';\n\nconst initRentalsReducer = () => {\n\n  const items = (state = [], action) => {\n\n    switch (action.type) {\n      case 'FETCH_RENTALS':\n        return action.rentals;\n      default:\n        return state;\n    }\n    \n  }\n\n  const isFetching = (state = false, action) => {\n\n    switch (action.type) {\n      case 'IS_FETCHING_RENTALS':\n        return true;\n      case 'FETCH_RENTALS':\n        return false; \n      default:\n        return state;\n    }\n    \n  }\n\n  return combineReducers({\n    items,\n    isFetching\n  });\n\n}\n\nexport default initRentalsReducer();","import { combineReducers } from 'redux';\n\nconst initRentalReducer = () => {\n  \n  const item = (state = {}, action) => {\n\n    switch (action.type) {\n      case 'FETCH_RENTAL_BY_ID':\n        return action.rental;\n      default:\n        return state;\n    }\n  }\n\n  const isFetching = (state = false, action) => {\n    switch (action.type) {\n      case 'IS_FETCHING_RENTAL':\n        return true;\n      case 'FETCH_RENTAL_BY_ID':\n        return false;\n      default:\n        return state;\n    }\n  }\n\n  return combineReducers({\n    item,\n    isFetching\n  });\n\n}\n\nexport default initRentalReducer();","import React from 'react';\nimport './App.css';\nimport Header from './components/shared/Header';\n// import RentalHome from './pages/RentalHome';\n// import Login from './pages/Login';\n// import Register from './pages/Register';\n\n// import { Router, Route } from './components/custom-router';\n\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom';\nimport Routes from './Routes';\n\n// custom react redux provider\n//import { StateContext } from './state-context';\n// import Provider from './store/Provider';\n\nimport { Provider } from 'react-redux';\n\nimport { initStore } from './store';\nconst store = initStore();\n\nconst App = () => {\n  \n  //#region basic routing\n  // const renderPages = () => {\n  //   const { pathname } = window.location;\n\n  //   switch(pathname) {\n  //     case '/login':\n  //       return (<Login />);\n  //     case '/register':\n  //       return (<Register />);\n  //     case '/': \n  //       return (<RentalHome />);\n  //     default:\n  //       return (<RentalHome />);\n  //   }\n  // }\n  //#endregion \n\n  return (\n    <div className=\"App\">\n    \n      {\n      //#region   custom router code\n      /*<Router>\n        <Route path='/login'>\n        <Login />\n        </Route>\n        <Route path='/register'>\n        <Register />\n        </Route>\n        <Route path='/'>\n        <RentalHome />\n        </Route>\n      </Router> */\n      //#endregion\n      }\n      {/* { renderPages() } */}\n\n      <Provider store={store}>\n        <Router> \n          <Header />\n          <Routes />\n         </Router>\n      </Provider>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import rentals from './reducers/rentals';\nimport rental from './reducers/rental';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk'; \n\n// const addPromiseToDispatch = (store) => {\n//   const { dispatch } = store;\n\n//   return action => {\n//     if( action.then && typeof action.then === 'function') {\n//       return action.then((action) => {\n//         dispatch(action);\n//       });\n//     }\n\n//     dispatch(action);\n//   }\n// }\n\n// const addThunkToDispatch = (store) => {\n//   const { dispatch } = store;\n//   return action => {\n//     if(typeof action === 'function') {\n//       return action(dispatch);\n//     }\n\n//     dispatch(action);\n//   }\n// }\n\n// const store = {\n//   rentals: () => rentalData,\n//   data: [1,2,3],\n//   data1: ['A','B','C']\n// };\n\nexport const initStore = () => {\n\n  // reducers are PURE function\n  // every time same output for same input\n  // No  API calls or route changses\n  // No Math.random() \n  const reducers = combineReducers({\n    rentals,\n    rental\n  });\n\n  const composeEnhancerForChromeExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__  || compose\n  const store = createStore(reducers, composeEnhancerForChromeExtension(applyMiddleware(thunk)));\n\n  // store.dispatch = addPromiseToDispatch(store);\n  // store.dispatch = addThunkToDispatch(store);\n\n  return store;\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// imporing order matters for css\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\n// to override some bootstrap classes index.css must be imported after them\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\n// any statement must be after all imports\nlibrary.add(fas);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}